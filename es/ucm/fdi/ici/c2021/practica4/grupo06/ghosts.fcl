FUNCTION_BLOCK FuzzyGhosts

VAR_INPUT				// Define input variables
	BLINKYedible : REAL;
	PINKYedible : REAL;
	INKYedible : REAL;
	SUEedible : REAL;
	BLINKYdistToClosestGhost : REAL;
	PINKYdistToClosestGhost : REAL;
	INKYdistToClosestGhost : REAL;
	SUEdistToClosestGhost : REAL;
	BLINKYdistToMsPacMan : REAL;
	PINKYdistToMsPacMan : REAL;
	INKYdistToMsPacMan : REAL;
	SUEdistToMsPacMan : REAL;
	distancePacManToPPill : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	runAway : REAL;
	runAwayFromBlinky: REAL;
	runAwayFromPinky: REAL;
	runAwayFromInky: REAL;
	runAwayFromSue: REAL;
	runAwayFromPacMan : REAL;
	chase: REAL;
	goToYourPartOfMap: REAL;
END_VAR

FUZZIFY BLINKYedible			
	TERM edible :=  (0, 0) (1, 1); 
END_FUZZIFY

FUZZIFY PINKYedible			
	TERM edible :=  (0, 0) (1, 1); 
END_FUZZIFY

FUZZIFY INKYedible			
	TERM edible :=  (0, 0) (1, 1); 
END_FUZZIFY

FUZZIFY SUEedible			
	TERM edible :=  (0, 0) (1, 1); 
END_FUZZIFY

FUZZIFY BLINKYdistToClosestGhost			
	TERM near := (0, 1) (40, 0) ; 
	TERM medium := gauss 55 25;
	TERM far := (70, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY PINKYdistToClosestGhost			
	TERM near := (0, 1) (40, 0) ; 
	TERM medium := gauss 55 25;
	TERM far := (70, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY INKYdistToClosestGhost			
	TERM near := (0, 1) (40, 0) ; 
	TERM medium := gauss 55 25;
	TERM far := (70, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY SUEdistToClosestGhost		
	TERM near := (0, 1) (40, 0) ; 
	TERM medium := gauss 55 25;
	TERM far := (70, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY BLINKYdistToMsPacMan		
	TERM near := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM far := (60, 0) (100, 1) (200, 1);
END_FUZZIFY

FUZZIFY PINKYdistToMsPacMan		
	TERM near := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM far := (60, 0) (100, 1) (200, 1);
END_FUZZIFY

FUZZIFY INKYdistToMsPacMan		
	TERM near := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM far := (60, 0) (100, 1) (200, 1);
END_FUZZIFY

FUZZIFY SUEdistToMsPacMan	
	TERM near := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM far := (60, 0) (100, 1) (200, 1);
END_FUZZIFY

FUZZIFY distancePacManToPPill	
	TERM near := (0, 1) (30, 0) ; 
	TERM medium := gauss 50 25;
	TERM far := (60, 0) (100, 1) (200, 1);
END_FUZZIFY

RULEBLOCK runAway
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)
	
	RULE 1 : IF SUEdistance IS near AND SUEconfidence IS high THEN runAwayFromSue IS emergency;
	RULE 2 : IF SUEdistance IS medium THEN runAwayFromSue IS nervious;
	RULE 3 : IF SUEdistance IS far THEN runAwayFromSue IS calm;
END_RULEBLOCK

END_FUNCTION_BLOCK